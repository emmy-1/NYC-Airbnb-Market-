{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "airbnbworkspace"
		},
		"airbnbworkspace-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'airbnbworkspace-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:airbnbworkspace.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"airbnbworkspace-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://abdatalake.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/airbnbworkspace-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('airbnbworkspace-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/airbnbworkspace-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('airbnbworkspace-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/2019 Analysis')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT [id]\n,[Name]\n,[Host_id]\n,[Host_name]\n,[Neighborhood_Group]\n,[Neighborhood]\n,[Latitude]\n,[Longitude]\n,[Room_type]\n,[Price]\n,[Minimum_nights]\n,[Number_of_reviews]\n,[Reviews_per_month]\n,[Calculated_host_listings_count]\n,[Availability]\n FROM [AirbnbDatalake].[dbo].[2019]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "AirbnbDatalake",
						"poolName": "Built-in"
					},
					"resultLimit": -1
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Airbnb Transformation')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "sparknew",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "40d60df4-cac6-43ac-89e8-7560df9f6c5e"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/2807cfaa-f940-4555-b623-1800da5ab957/resourceGroups/NewYorkAirbnb/providers/Microsoft.Synapse/workspaces/airbnbworkspace/bigDataPools/sparknew",
						"name": "sparknew",
						"type": "Spark",
						"endpoint": "https://airbnbworkspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/sparknew",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.3",
						"nodeCount": 10,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# **LOAD AIRBNB DATASETS**\r\n",
							"\r\n",
							"the subsequent PySpark code is designed to define a table schema, read, load, and display the Airbnb 2024,2023 and dataset"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"from pyspark.sql.types import *\r\n",
							"from pyspark.sql.functions import *\r\n",
							"\r\n",
							"nySchema = StructType([\r\n",
							"    StructField(\"id\", LongType()),\r\n",
							"    StructField(\"name\", StringType()),\r\n",
							"    StructField(\"description\", StringType()),\r\n",
							"    StructField(\"host_id\", IntegerType()),\r\n",
							"    StructField(\"host_name\", StringType()),\r\n",
							"    StructField(\"neighbourhood\", StringType()),\r\n",
							"    StructField(\"neighbourhood_group\", StringType()),\r\n",
							"    StructField(\"latitude\", FloatType()),\r\n",
							"    StructField(\"longitude\", FloatType()),\r\n",
							"    StructField(\"property_type\", StringType()),\r\n",
							"    StructField(\"room_type\", StringType()),\r\n",
							"    StructField(\"price\", IntegerType()),\r\n",
							"    StructField(\"minimum_nights\", IntegerType()),\r\n",
							"    StructField(\"number_of_reviews\", IntegerType()),\r\n",
							"    StructField(\"calculated_host_listings_count\", IntegerType()),\r\n",
							"    StructField(\"availability_365\", IntegerType())\r\n",
							"    ])\r\n",
							"\r\n",
							"\r\n",
							"def load_datasets(datapart, formattype, schematype=None, header=True):\r\n",
							"    output = spark.read.load(datapart, format=formattype, schema=schematype, header=header)\r\n",
							"    return output\r\n",
							"\r\n",
							"# Load Datasets\r\n",
							"NeyWork2024 = load_datasets('abfss://ffs@abdatalake.dfs.core.windows.net/Raw Datasets/2024.csv','csv',nySchema,header=True)\r\n",
							"db_2023 = load_datasets('abfss://ffs@abdatalake.dfs.core.windows.net/Raw Datasets/2023.csv','csv',nySchema,header=True) \r\n",
							"db_2019 = load_datasets('abfss://ffs@abdatalake.dfs.core.windows.net/Raw Datasets/2019.csv','csv',header=True)\r\n",
							"\r\n",
							"\r\n",
							"# Load datasets\r\n",
							"display(NeyWork2024.limit(10))\r\n",
							"display(db_2023.limit(10))\r\n",
							"display(db_2019.limit(10480))"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# CREATE Databases for each datasets\r\n",
							"function is used to create a temporary view of a DataFrame in Spark. "
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"def CreateSqltb (dataset, name):\r\n",
							"    return dataset.createOrReplaceTempView(name)\r\n",
							"\r\n",
							"# Create Tempoary Tables for each year\r\n",
							"CreateSqltb(NeyWork2024, \"Airbnb2024n\")\r\n",
							"CreateSqltb(db_2023, \"Airbnb2023n\")\r\n",
							"CreateSqltb(db_2019, \"Airbnb2019n\")"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Cleaning with distinct Values \r\n",
							"\r\n",
							"In data analysis, \"distinct values\" refer to unique or non-repeating entries within a dataset. By examining the unique values within a dataset, one can identify inconsistencies, errors, or anomalies that may need to be addressed. For example, if a column is expected to contain only certain categories or ranges of values, spotting unexpected or out-of-place distinct values can indicate data quality issues.\r\n",
							"The first step we will take is looking at the unique values that are in the neighborhood group as it will be much easier to see values that aren't supposed to be there. upon writing the following code:"
						]
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Select Only 5 major neigbourhood Groups 2024"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"distinct = spark.sql(\"SELECT * FROM Airbnb2024n WHERE neighbourhood_group IN ('Manhattan', 'Bronx', 'Brooklyn', 'Staten Island', 'Queens')\")\r\n",
							"CreateSqltb(distinct, \"Airbnb2024new\")\r\n",
							""
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Select only the most common room type in 2023 datasets"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"Roomclean = spark.sql(\" Select * from Airbnb2023n WHERE room_type IN ('Shared room', 'Hotel room', 'Entire home/apt', 'Private room')\")\r\n",
							"CreateSqltb(Roomclean, \"Airbnb2023new\")"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Select Only 5 major neigbourhood Groups 2019"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"neighbourhoodclean = spark.sql(\" Select * from Airbnb2019n WHERE neighbourhood_group IN('Queens','Brooklyn','Staten Island','Manhattan','Bronx')\")\r\n",
							"database19 = spark.sql(\"SELECT * FROM Airbnb2019New WHERE id != 'Astoria'\")\r\n",
							"CreateSqltb(database19, \"Airbnb2019New\")"
						],
						"outputs": [],
						"execution_count": 26
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Write Transformed Dataset into an Azure Datalake"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"tags": [
								"parameters"
							]
						},
						"source": [
							"import uuid\r\n",
							"\r\n",
							"# Generate random GUID\r\n",
							"runId = uuid.uuid4()"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"def write_dataset(dataset, filename, runId):\r\n",
							"    output_path = 'abfss://ffs@abdatalake.dfs.core.windows.net/Transformed Datasets/' + filename + str(runId)\r\n",
							"    dataset.coalesce(1).write.format('csv').mode('overwrite').option('header',True).save(output_path)"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"write_dataset(distinct, '2024.csv',runId)\r\n",
							"write_dataset(Roomclean, '2023.csv',runId)\r\n",
							"write_dataset(database19, '2019.csv',runId)\r\n",
							""
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							""
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AirbnbDatalake')]",
			"type": "Microsoft.Synapse/workspaces/databases",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"Ddls": [
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "AirbnbDatalake",
							"EntityType": "DATABASE",
							"Origin": {
								"Type": "SPARK"
							},
							"Properties": {
								"IsSyMSCDMDatabase": true
							},
							"Source": {
								"Provider": "ADLS",
								"Location": "abfss://ffs@abdatalake.dfs.core.windows.net/AirbnbDatalake",
								"Properties": {
									"FormatType": "csv",
									"LinkedServiceName": "airbnbworkspace-WorkspaceDefaultStorage"
								}
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "2019",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "AirbnbDatalake"
							},
							"Description": "",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "id",
										"Description": "unique identifier for each Airbnb listing.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Name",
										"Description": "title or name of the listing.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Host_id",
										"Description": "unique identifier for the host of the Airbnb listing.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Host_name",
										"Description": "name of the host associated with the listing.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 400,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Neighborhood_Group",
										"Description": "geocoded neighborhood defined by open or public.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Neighborhood",
										"Description": "the area where the listing is located.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Latitude",
										"Description": "geographic coordinates of the listing.",
										"OriginDataTypeName": {
											"TypeName": "float",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "float"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Longitude",
										"Description": "geographic coordinates of the listing.",
										"OriginDataTypeName": {
											"TypeName": "float",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "float"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Room_type",
										"Description": "type of accommodation offered.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Price",
										"Description": "nightly rental price for the listing.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Minimum_nights",
										"Description": "minimum number of nights required for booking.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Number_of_reviews",
										"Description": "total number of reviews received for the listing.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Reviews_per_month",
										"Description": "verage number of reviews a room receives monthly.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Calculated_host_listings_count",
										"Description": "total number of rooms owned or listed by the same host.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Availability",
										"Description": "number of days the listing is available for booking within a certain time frame.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://ffs@abdatalake.dfs.core.windows.net/AirbnbDatalake/2019",
										"delimiter": ",",
										"multiLine": "false",
										"firstRowAsHeader": "true",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "true"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://ffs@abdatalake.dfs.core.windows.net/AirbnbDatalake/2019",
									"Properties": {
										"LinkedServiceName": "airbnbworkspace-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"Description": "",
								"DisplayFolderInfo": "{\"name\":\"Others\",\"colorCode\":\"\"}",
								"PrimaryKeys": "id,Host_id",
								"spark.sql.sources.provider": "csv"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "2023",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "AirbnbDatalake"
							},
							"Description": "",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "id",
										"Description": "unique identifier for each Airbnb listing.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Name",
										"Description": "title or name of the listing.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Host_name",
										"Description": "name of the host associated with the listing.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Neighborhood_Group",
										"Description": "geocoded neighborhood defined by open or public.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Neighborhood",
										"Description": "the area where the listing is located.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Latitude",
										"Description": "geographic coordinates of the listing.",
										"OriginDataTypeName": {
											"TypeName": "float",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "float"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Longitude",
										"Description": "geographic coordinates of the listing.",
										"OriginDataTypeName": {
											"TypeName": "float",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "float"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "property_type",
										"Description": "describes the type of property listed on the Airbnb platform",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Room_type",
										"Description": "type of accommodation offered.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Price",
										"Description": "nightly rental price for the listing.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Minimum_nights",
										"Description": "minimum number of nights required for booking.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Number_of_reviews",
										"Description": "total number of reviews received for the listing.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Reviews_per_month",
										"Description": "verage number of reviews a room receives monthly.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Calculated_host_listings_count",
										"Description": "total number of rooms owned or listed by the same host.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Availability",
										"Description": "number of days the listing is available for booking within a certain time frame.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://ffs@abdatalake.dfs.core.windows.net/AirbnbDatalake/2023",
										"delimiter": ",",
										"multiLine": "false",
										"firstRowAsHeader": "true",
										"serialization.format": "1",
										"escape": "\"",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "true"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://ffs@abdatalake.dfs.core.windows.net/AirbnbDatalake/2023",
									"Properties": {
										"LinkedServiceName": "airbnbworkspace-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"Description": "",
								"DisplayFolderInfo": "{\"name\":\"Others\",\"colorCode\":\"\"}",
								"PrimaryKeys": "id",
								"spark.sql.sources.provider": "csv"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false,
							"Partitioning": {}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "2024",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "AirbnbDatalake"
							},
							"Description": "",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "id",
										"Description": "unique identifier for each Airbnb listing.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Name",
										"Description": "title or name of the listing.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Host_id",
										"Description": "",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Host_name",
										"Description": "name of the host associated with the listing.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Neighborhood_Group",
										"Description": "geocoded neighborhood defined by open or public.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Neighborhood",
										"Description": "the area where the listing is located.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Latitude",
										"Description": "geographic coordinates of the listing.",
										"OriginDataTypeName": {
											"TypeName": "float",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "float"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Longitude",
										"Description": "geographic coordinates of the listing.",
										"OriginDataTypeName": {
											"TypeName": "float",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "float"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "property_type",
										"Description": "describes the type of property listed on the Airbnb platform",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Room_type",
										"Description": "type of accommodation offered.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Price",
										"Description": "nightly rental price for the listing.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Minimum_nights",
										"Description": "minimum number of nights required for booking.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Number_of_reviews",
										"Description": "total number of reviews received for the listing.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Reviews_per_month",
										"Description": "verage number of reviews a room receives monthly.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Calculated_host_listings_count",
										"Description": "total number of rooms owned or listed by the same host.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "Availability",
										"Description": "number of days the listing is available for booking within a certain time frame.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://ffs@abdatalake.dfs.core.windows.net/AirbnbDatalake/2024",
										"delimiter": ",",
										"multiLine": "false",
										"firstRowAsHeader": "true",
										"serialization.format": "1",
										"escape": "\"",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "true"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://ffs@abdatalake.dfs.core.windows.net/AirbnbDatalake/2024",
									"Properties": {
										"LinkedServiceName": "airbnbworkspace-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"Description": "",
								"DisplayFolderInfo": "{\"name\":\"Others\",\"colorCode\":\"\"}",
								"PrimaryKeys": "id,Host_id",
								"spark.sql.sources.provider": "csv"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/newspaarkpool')]",
			"type": "Microsoft.Synapse/workspaces/bigDataPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"autoPause": {
					"enabled": true,
					"delayInMinutes": 5
				},
				"autoScale": {
					"enabled": false,
					"maxNodeCount": 10,
					"minNodeCount": 3
				},
				"nodeCount": 3,
				"nodeSize": "Small",
				"nodeSizeFamily": "MemoryOptimized",
				"sparkVersion": "3.3",
				"isComputeIsolationEnabled": false,
				"sessionLevelPackagesEnabled": false,
				"annotations": []
			},
			"dependsOn": [],
			"location": "uksouth"
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sparknew')]",
			"type": "Microsoft.Synapse/workspaces/bigDataPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"autoPause": {
					"enabled": true,
					"delayInMinutes": 15
				},
				"autoScale": {
					"enabled": true,
					"maxNodeCount": 3,
					"minNodeCount": 3
				},
				"nodeCount": 10,
				"nodeSize": "Small",
				"nodeSizeFamily": "MemoryOptimized",
				"sparkVersion": "3.3",
				"isComputeIsolationEnabled": false,
				"sessionLevelPackagesEnabled": false,
				"annotations": []
			},
			"dependsOn": [],
			"location": "uksouth"
		}
	]
}